{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\n0269749\\\\Documents\\\\Projects\\\\Twilio\\\\frontend\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { Grid, Header, Segment, Form, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  user: {\n    username,\n    mobileNumber,\n    verificationCode,\n    verificationSent\n  },\n  setUser,\n  sendSmsCode\n}) {\n  function populateFilds(event, data) {\n    setUser(draft => {\n      draft[data.name] = data.value;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    style: {\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidht: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        color: \"teal\",\n        textAlign: \"center\",\n        children: \"Login into Your Account:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeHolder: \"UserName\",\n            value: username,\n            onChange: (event, data) => populateFilds(event, data),\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"mobile alternate\",\n            iconPosition: \"left\",\n            placeHolder: \"Mobile Number\",\n            value: mobileNumber,\n            onChange: (event, data) => populateFilds(event, data),\n            name: \"mobileNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), verificationSent && /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"key\",\n            iconPosition: \"left\",\n            placeHolder: \"Enter your code\",\n            value: verificationCode,\n            onChange: (event, data) => populateFilds(event, data),\n            name: \"verificationCode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"teal\",\n            fluid: true,\n            size: \"large\",\n            onClick: sendSmsCode,\n            children: \"Login/Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/n0269749/Documents/Projects/Twilio/frontend/src/components/Login.js"],"names":["React","Grid","Header","Segment","Form","Button","Login","user","username","mobileNumber","verificationCode","verificationSent","setUser","sendSmsCode","populateFilds","event","data","draft","name","value","height","maxWidht"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Grid, Header, Segment, Form, Button} from 'semantic-ui-react';\r\n\r\nfunction Login({user:{username, mobileNumber, verificationCode, verificationSent}, setUser, sendSmsCode}) {\r\n    function populateFilds(event, data){\r\n        setUser((draft) => {\r\n            draft[data.name] = data.value;\r\n        });\r\n    }\r\n    return <Grid textAlign='center' verticalAlign='middle' style={{height: '100vh' }}>\r\n        <Grid.Column style={{maxWidht: 450 }}>\r\n            <Header as='h2' color=\"teal\" textAlign='center'>\r\n                Login into Your Account:\r\n            </Header>\r\n            <form>\r\n                <Segment stacked>\r\n                    <Form.Input \r\n                        fluid\r\n                        icon='user'\r\n                        iconPosition='left'\r\n                        placeHolder='UserName'\r\n                        value={username}\r\n                        onChange={(event, data)=> populateFilds(event, data)}\r\n                        name='username'\r\n                        />\r\n                    <Form.Input \r\n                        fluid\r\n                        icon='mobile alternate'\r\n                        iconPosition='left'\r\n                        placeHolder='Mobile Number'\r\n                        value={mobileNumber}\r\n                        onChange={(event, data)=> populateFilds(event, data)}\r\n                        name='mobileNumber'\r\n                        />\r\n                    {verificationSent && (\r\n                    <Form.Input\r\n                        fluid\r\n                        icon='key'\r\n                        iconPosition='left'\r\n                        placeHolder='Enter your code'\r\n                        value={verificationCode}\r\n                        onChange={(event, data) => populateFilds(event, data)}\r\n                        name='verificationCode'\r\n                        />\r\n                    )}\r\n                    <Button color=\"teal\" fluid size=\"large\" onClick={sendSmsCode}>\r\n                        Login/Signup\r\n                    </Button>\r\n                </Segment>\r\n            </form>\r\n        </Grid.Column>\r\n    </Grid>;\r\n    }\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}